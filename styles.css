* {
  box-sizing: border-box;
}

:root {
  --zenika-red: rgb(178, 30, 62);
}

html, body {
  margin: 0;
  background-color: #eee;
}

body {
  font-family: "Helvetica Neue", sans-serif;
  font-size: 1rem;
}

.container {
  margin: 1rem auto;
  width: 50vw;
}

.switch {
  font-size: 0.8rem;
}

button[role=switch] {
  background-color: var(--zenika-red);
  border-radius: 1.375rem !important;
  box-sizing: content-box;
  color: white;
  font-weight: bold;
  font-size: 0.8rem;
  height: 1.75rem;
  line-height: 1.75rem;
  padding: 0;
  transition: all 0.3s cubic-bezier(0, 0.5, 0.5, 1);
  width: 6.75rem;
  will-change: background-color;
  border: 0;
  position: relative;
}

button[role=switch]::before {
  background: darkgrey;
  border-radius: 1.375rem;
  content: "";
  position: absolute;
  height: 1.375rem;
  left: 0.25rem;
  top: 0.25rem;
  transform: none;
  transition: transform 0.3s cubic-bezier(0, 0.5, 0.5, 1) 0s;
  width: 1.375rem;
  will-change: transform;
}

button[role=switch][aria-checked=true]::before {
  background: white;
  transform: translateX(4.875rem);
}

button[role=switch][aria-checked=true] > :first-child {
  display: block;
}

button[role=switch] > :first-child, button[role=switch][aria-checked=true] > :last-child {
  display: none;
}

table {
  border-spacing: 0;
  border-collapse: separate;
}
table caption {
  font-size: 0.9rem;
  font-style: italic;
  padding: 5px;
}

td, th {
  border-bottom: var(--zenika-red) 1px solid;
}

th {
  font-size: 1rem;
  font-weight: bold;
}

@media screen and (min-width: 50em) {
  table {
    border-collapse: collapse;
    border-spacing: 0;
    caption-side: top;
    empty-cells: hide;
    font-feature-settings: "tnum";
  }

  .chart {
    --height: 60vh;
    height: var(--height);
    width: 40vw;
    display: grid;
    grid-template-areas: "content" "xAxis" "title";
    position: relative;
  }

  table.chart caption {
    grid-area: title;
  }
  table.chart th[scope=row] {
    display: none;
  }
  table.chart tbody {
    height: inherit;
  }
  table.chart tbody tr.effectif {
    grid-area: content;
    display: grid;
    grid-auto-columns: 1fr;
    grid-template-rows: repeat(var(--yEffectif), 1fr);
    grid-column-gap: 5px;
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: 2;
    --line-every: 50;
    background-image: linear-gradient(to bottom, #ccc 1px, transparent 1px);
    background-size: 100% calc(100% / var(--yEffectif) * var(--line-every));
  }
  table.chart tbody tr.effectif td {
    --start: calc(var(--yEffectif) + 1 - var(--value));
    grid-row-start: var(--start);
    grid-row-end: -1;
    background-color: var(--zenika-red);
    border-radius: 5px 5px 0 0;
    text-align: center;
    padding-top: 0.5rem;
    transition: all 0.2s ease-in-out;
  }
  table.chart tbody tr.effectif td:hover {
    transform: scale(1.05);
    filter: invert(100%);
    cursor: pointer;
  }
  table.chart tbody tr.effectif td span {
    font-weight: bolder;
    color: #eeeeee;
    font-size: 0.9rem;
  }
  table.chart thead {
    grid-area: xAxis;
  }
  table.chart thead tr {
    display: grid;
  }
  table.chart thead tr th {
    display: flex;
    grid-row: -2/span 1;
    justify-content: center;
    border-bottom: none;
    padding: 5px;
  }
  table.chart tr.ca {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    font-size: 0.9rem;
    --offset-bottom: 0px;
    --bottom: calc(100% - var(--height));
    --ca-height: var(--height);
  }
  table.chart tr.ca::before {
    grid-area: content;
    content: "";
    --line-width: 4px;
    --offset: calc((100% / var(--x)) / 2);
    background-color: var(--color);
    -webkit-clip-path: polygon(var(--offset) calc(100% - (var(--1) / var(--yCa) * 100%)), calc((100% / var(--x) * 1) + var(--offset)) calc(100% - (var(--2) / var(--yCa) * 100%)), calc((100% / var(--x) * 2) + var(--offset)) calc(100% - (var(--3) / var(--yCa) * 100%)), calc((100% / var(--x) * 3) + var(--offset)) calc(100% - (var(--4) / var(--yCa) * 100%)), calc((100% / var(--x) * 4) + var(--offset)) calc(100% - (var(--5) / var(--yCa) * 100%)), calc((100% / var(--x) * 5) + var(--offset)) calc(100% - (var(--6) / var(--yCa) * 100%)), calc((100% / var(--x) * 6) + var(--offset)) calc(100% - (var(--7) / var(--yCa) * 100%)), calc((100% / var(--x) * 6) + var(--offset)) calc(100% - (var(--7) / var(--yCa) * 100%) + var(--line-width)), calc((100% / var(--x) * 5) + var(--offset)) calc(100% - (var(--6) / var(--yCa) * 100%) + var(--line-width)), calc((100% / var(--x) * 4) + var(--offset)) calc(100% - (var(--5) / var(--yCa) * 100%) + var(--line-width)), calc((100% / var(--x) * 3) + var(--offset)) calc(100% - (var(--4) / var(--yCa) * 100%) + var(--line-width)), calc((100% / var(--x) * 2) + var(--offset)) calc(100% - (var(--3) / var(--yCa) * 100%) + var(--line-width)), calc((100% / var(--x) * 1) + var(--offset)) calc(100% - (var(--2) / var(--yCa) * 100%) + var(--line-width)), var(--offset) calc(100% - (var(--1) / var(--yCa) * 100%) + var(--line-width)));
    clip-path: polygon(var(--offset) calc(100% - (var(--1) / var(--yCa) * 100%)), calc((100% / var(--x) * 1) + var(--offset)) calc(100% - (var(--2) / var(--yCa) * 100%)), calc((100% / var(--x) * 2) + var(--offset)) calc(100% - (var(--3) / var(--yCa) * 100%)), calc((100% / var(--x) * 3) + var(--offset)) calc(100% - (var(--4) / var(--yCa) * 100%)), calc((100% / var(--x) * 4) + var(--offset)) calc(100% - (var(--5) / var(--yCa) * 100%)), calc((100% / var(--x) * 5) + var(--offset)) calc(100% - (var(--6) / var(--yCa) * 100%)), calc((100% / var(--x) * 6) + var(--offset)) calc(100% - (var(--7) / var(--yCa) * 100%)), calc((100% / var(--x) * 6) + var(--offset)) calc(100% - (var(--7) / var(--yCa) * 100%) + var(--line-width)), calc((100% / var(--x) * 5) + var(--offset)) calc(100% - (var(--6) / var(--yCa) * 100%) + var(--line-width)), calc((100% / var(--x) * 4) + var(--offset)) calc(100% - (var(--5) / var(--yCa) * 100%) + var(--line-width)), calc((100% / var(--x) * 3) + var(--offset)) calc(100% - (var(--4) / var(--yCa) * 100%) + var(--line-width)), calc((100% / var(--x) * 2) + var(--offset)) calc(100% - (var(--3) / var(--yCa) * 100%) + var(--line-width)), calc((100% / var(--x) * 1) + var(--offset)) calc(100% - (var(--2) / var(--yCa) * 100%) + var(--line-width)), var(--offset) calc(100% - (var(--1) / var(--yCa) * 100%) + var(--line-width)));
    position: absolute;
    top: 0;
    bottom: var(--bottom);
    width: 100%;
    z-index: 3;
  }
  table.chart tr.ca td {
    display: flex;
    justify-content: center;
    border-bottom: none;
    padding: 5px;
    position: relative;
    --top: calc(var(--ca-height) - (var(--value) / var(--yCa) * var(--ca-height)));
  }
  table.chart tr.ca td::before {
    --size: 0.6rem;
    background-color: #cccccc;
    border: 2px solid var(--color);
    border-radius: 50%;
    box-shadow: 0 0 0 rgba(0, 0, 0, 0.5);
    content: "";
    height: var(--size);
    position: absolute;
    top: var(--top);
    transform: translate3d(0, calc(var(--size) / -2), 0);
    width: var(--size);
    z-index: 4;
  }
  table.chart tr.ca td span {
    position: absolute;
    top: calc(var(--top) - 2rem);
    z-index: 5;
  }
}

/*# sourceMappingURL=styles.css.map */
